{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/body/body.component.ts","webpack:///src/app/body/body.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/store-chat.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BodyComponent","chatService","getMessage","getOnlyLike","toggleOnlyLike","toggleAll","toggleLike","HeaderComponent","StoreChatService","messages","message","avatar","like","onlyLike","items","filter","item","map","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'no-twitter';\n}\n","<div class=\"container\">\r\n  <app-header></app-header>\r\n  <app-body></app-body>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { BodyComponent } from './body/body.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    BodyComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {StoreChatService} from '../store-chat.service';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.css']\n})\nexport class BodyComponent implements OnInit {\n\n  constructor( private chatService: StoreChatService ) { }\n  getMessage() {\n    return this.chatService.getMessage();\n  }\n  getOnlyLike() {\n    return this.chatService.getOnlyLike();\n  }\n  toggleOnlyLike(){\n    this.chatService.toggleOnlyLike();\n  }\n  toggleAll() {\n    this.chatService.toggleAll();\n  }\n  toggleLike(id){\n    this.chatService.toggleLike(id);\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <a href=\"#\" class=\"d-flex align-items-center\" [class.text-danger]=\"!getOnlyLike()\" (click)=\"toggleAll()\">\n          <span class=\"material-icons\">list</span>Все твиты\n        </a>\n      </div>\n      <div class=\"col\">\n        <a href=\"#\" class=\"d-flex justify-content-end align-items-center\" [class.text-danger]=\"getOnlyLike()\" (click)=\"toggleOnlyLike()\">\n          <span class=\"material-icons liked\">favorite</span>Понравилось\n        </a>\n      </div>\n    </div>\n    <div class=\"text-center text-muted p-2\" *ngIf=\"getMessage().length === 0\">\n      Нет записей вывода\n    </div>\n    <ul class=\"list-group list-group-flush\">\n      <li class=\"list-group-item d-flex px-0\" *ngFor=\"let item of getMessage()\">\n        <div class=\"border-bottom pb-2 pt-2\">\n          <div class=\"d-flex\">\n            <div>\n              <img class=\"avatar\" src=\"{{item.avatar}}\">\n            </div>\n            <div class=\"messege\">\n              {{item.message}}\n            </div>\n          </div>\n          <div class=\"like_block\" >\n            <a href=\"#\" class=\"\" (click)=\"toggleLike(item.id)\" >\n            <div class=\"like_icon_block\">\n              <span class=\"material-icons text-danger\">{{item.like ? 'favorite' : 'favorite_border'}}</span> like\n            </div>\n            </a>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center p-3\">\n  <h5>\n    <span class=\"text-danger\">no-</span>twitter\n  </h5>\n</div>\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreChatService {\n  messages = [\n    {\n      id: 1,\n      message: 'hello everyone. How are you?',\n      avatar: 'http://intocode.ru/d/react-chat/avatars/admin.jpg',\n      like: false\n    },\n    {\n      id: 2,\n      message: 'Как живется на карантине? Мне плохо',\n      avatar: 'http://intocode.ru/d/react-chat/avatars/adam.jpg',\n      like: false\n    },\n    {\n      id: 3,\n      message: 'Эту домашку нужно выполнить во что бы то не стало!',\n      avatar: 'http://intocode.ru/d/react-chat/avatars/admin.jpg',\n      like: false},\n    {\n      id: 4,\n      message: 'Я так говорю о всех домашках',\n      avatar: 'http://intocode.ru/d/react-chat/avatars/no-avatar.jpg',\n      like: false\n    },\n    {\n      id: 5,\n      message: 'Но эта особенная...',\n      avatar: 'http://intocode.ru/d/react-chat/avatars/adam.jpg',\n      like: false\n    }\n  ];\n  onlyLike = false;\n  getOnlyLike() {\n    return this.onlyLike;\n  }\n  toggleOnlyLike() {\n    this.onlyLike = !this.onlyLike;\n  }\n  toggleAll() {\n    this.onlyLike = false;\n  }\n  getMessage() {\n    let items;\n    if (this.onlyLike){\n      items = this.messages.filter( item => item.like);\n    }\n    else {\n      items = this.messages;\n    }\n    return items;\n  }\n  toggleLike(id) {\n    this.messages = this.messages.map(item => {\n      if (item.id === id) {\n        return {\n          ...item,\n          like: !item.like\n        };\n      }\n      return item;\n    });\n  }\n\n\n  constructor() {\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}